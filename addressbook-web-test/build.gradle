apply plugin: 'java'

repositories {
    mavenCentral()
}

configurations {
    agent
}

task runTests(type: Test) {
    useTestNG() {
        testLogging.showStandardStreams = true
        includeGroups System.getProperty('tag', 'NONE')
    }
}

    dependencies {
        compile 'org.testng:testng:6.9.10'
        compile 'org.seleniumhq.selenium:selenium-java:2.52.0'
        compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.7.1'
        compile 'org.hamcrest:java-hamcrest:2.0.0.0'
        compile 'com.beust:jcommander:1.48'
        compile 'com.thoughtworks.xstream:xstream:1.4.8'
        compile 'com.google.code.gson:gson:2.6.1'
        compile 'ch.qos.logback:logback-classic:1.1.5'
        compile 'mysql:mysql-connector-java:5.1.38'
        compile 'org.hibernate:hibernate-core:5.1.0.Final'
        agent "org.aspectj:aspectjweaver:1.8.0"
        compile "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4"
        compile 'org.robotframework:robotframework:3.0'
        compile 'info.cukes:cucumber-java:1.2.4'
        compile 'info.cukes:cucumber-testng:1.2.4'
    }


    test {
        // enable TestNG support (default is JUnit)
        useTestNG()

        // show standard out and standard error of the test JVM(s) on the console
        testLogging.showStandardStreams = true

        // set heap size for the test JVM(s)
        minHeapSize = "128m"
        maxHeapSize = "512m"

        // set JVM arguments for the test JVM(s)
        jvmArgs '-XX:MaxPermSize=256m'

        // listen to events in the test execution lifecycle
        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }

        // Fail the 'test' task on the first test failure
        failFast = true

        // listen to standard out and standard error of the test JVM(s)
        onOutput { descriptor, event ->
            logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
        }
    }